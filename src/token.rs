#[derive(Debug, PartialEq)]
pub enum Token {
    Integer(i32),
    String(String),
    Identifier(String),
    Invalid(String),
    Class,
    Constructor,
    Function,
    Method,
    Field,
    Static,
    Var,
    Int,
    Char,
    Boolean,
    Void,
    True,
    False,
    Null,
    This,
    Let,
    Do,
    If,
    Else,
    While,
    Return,
    Plus,
    Minus,
    Asterisk,
    Slash,
    And,
    Or,
    GreaterThan,
    LessThan,
    Equal,
    LeftBracket,
    RightBracket,
    LeftBrace,
    RightBrace,
    LeftParen,
    RightParen,
    Dot,
    Comma,
    SemiColon,
    Tilde,
}

pub fn match_identifier(iden: &str) -> Token {
    match iden {
        "class" => Token::Class,
        "constructor" => Token::Constructor,
        "function" => Token::Function,
        "method" => Token::Method,
        "field" => Token::Field,
        "static" => Token::Static,
        "var" => Token::Var,
        "int" => Token::Int,
        "char" => Token::Char,
        "boolean" => Token::Void,
        "true" => Token::True,
        "false" => Token::False,
        "null" => Token::Null,
        "this" => Token::This,
        "let" => Token::Let,
        "do" => Token::Do,
        "if" => Token::If,
        "else" => Token::Else,
        "while" => Token::While,
        "return" => Token::Return,
        _ => Token::Identifier(iden.to_string()),
    }
}
